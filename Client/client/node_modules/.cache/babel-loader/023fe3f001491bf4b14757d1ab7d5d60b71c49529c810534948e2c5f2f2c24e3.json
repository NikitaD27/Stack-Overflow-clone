{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikita\\\\Stack Overflow Clone\\\\Client\\\\client\\\\src\\\\config.js\";\nimport React from \"react\";\nimport { createChatBotMessage } from \"react-chatbot-kit\";\nimport SingleFlight from './components/SingleFlight/SingleFlight';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst botName = \"Somebot\";\nconst config = {\n  // Defines the chatbot name\n  botName: botName,\n  // Defines an array of initial messages that will be displayed on first render\n  initialMessages: [createChatBotMessage(`Hi I'm ${botName}`), createChatBotMessage(\"First things first, which airport are you looking for information from?\", {\n    widget: \"airportSelector\",\n    delay: 500\n  })],\n  // Defines an object that will be injected into the chatbot state, you can use this state in widgets for example\n  state: {\n    airports: [],\n    flightType: \"\",\n    selectedFlightId: \"\",\n    selectedFlight: null\n  },\n  // Defines an object of custom components that will replace the stock chatbot components.\n  customComponents: {\n    // Replaces the default header\n    header: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'red',\n        padding: \"5px\",\n        borderRadius: \"3px\"\n      },\n      children: \"This is the header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }, this),\n    // Replaces the default bot avatar\n    botAvatar: props => /*#__PURE__*/_jsxDEV(FlightBotAvatar, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 27\n    }, this),\n    // Replaces the default bot chat message container\n    botChatMessage: props => /*#__PURE__*/_jsxDEV(CustomChatMessage, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 32\n    }, this),\n    // Replaces the default user icon\n    userAvatar: props => /*#__PURE__*/_jsxDEV(MyUserAvatar, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 28\n    }, this),\n    // Replaces the default user chat message\n    userChatMessage: props => /*#__PURE__*/_jsxDEV(MyUserChatMessage, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }, this)\n  },\n  // Register your own set of components as custom message types\n  customMessages: {\n    \"custom\": props => /*#__PURE__*/_jsxDEV(MyCustomMessage, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 28\n    }, this)\n  },\n  // Defines an object of custom styles if you want to override styles\n  customStyles: {\n    // Overrides the chatbot message styles\n    botMessageBox: {\n      backgroundColor: \"#376B7E\"\n    },\n    // Overrides the chat button styles\n    chatButton: {\n      backgroundColor: \"#5ccc9d\"\n    }\n  },\n  // Defines an array of widgets that you want to render with a chatbot message\n  widgets: [{\n    // defines the name you will use to reference to this widget in \"createChatBotMessage\".\n    widgetName: \"singleFlight\",\n    // Function that will be called internally to resolve the widget\n    widgetFunc: props => /*#__PURE__*/_jsxDEV(SingleFlight, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 30\n    }, this),\n    // Any props you want the widget to receive on render\n    props: {},\n    // Any piece of state defined in the state object that you want to pass down to this widget\n    mapStateToProps: [\"selectedFlightId\", \"selectedFlight\"]\n  }]\n};\nexport default config;","map":{"version":3,"names":["React","createChatBotMessage","SingleFlight","botName","config","initialMessages","widget","delay","state","airports","flightType","selectedFlightId","selectedFlight","customComponents","header","backgroundColor","padding","borderRadius","botAvatar","props","botChatMessage","userAvatar","userChatMessage","customMessages","customStyles","botMessageBox","chatButton","widgets","widgetName","widgetFunc","mapStateToProps"],"sources":["C:/Users/Nikita/Stack Overflow Clone/Client/client/src/config.js"],"sourcesContent":["import React from \"react\";\r\nimport { createChatBotMessage } from \"react-chatbot-kit\";\r\n\r\nimport SingleFlight from './components/SingleFlight/SingleFlight'\r\n\r\nconst botName = \"Somebot\";\r\n\r\nconst config = {\r\n  // Defines the chatbot name\r\n  botName: botName,\r\n  // Defines an array of initial messages that will be displayed on first render\r\n  initialMessages: [\r\n    createChatBotMessage(`Hi I'm ${botName}`),\r\n    createChatBotMessage(\r\n      \"First things first, which airport are you looking for information from?\",\r\n      {\r\n        widget: \"airportSelector\",\r\n        delay: 500,\r\n      }\r\n    ),\r\n  ],\r\n  // Defines an object that will be injected into the chatbot state, you can use this state in widgets for example\r\n  state: {\r\n    airports: [],\r\n    flightType: \"\",\r\n    selectedFlightId: \"\",\r\n    selectedFlight: null,\r\n  },\r\n  // Defines an object of custom components that will replace the stock chatbot components.\r\n  customComponents: {\r\n     // Replaces the default header\r\n    header: () => <div style={{ backgroundColor: 'red', padding: \"5px\", borderRadius: \"3px\" }}>This is the header</div>,\r\n    // Replaces the default bot avatar\r\n    botAvatar: (props) => <FlightBotAvatar {...props} />,\r\n    // Replaces the default bot chat message container\r\n    botChatMessage: (props) => <CustomChatMessage {...props} />,\r\n    // Replaces the default user icon\r\n    userAvatar: (props) => <MyUserAvatar {...props} />,\r\n    // Replaces the default user chat message\r\n    userChatMessage: (props) => <MyUserChatMessage {...props} />\r\n  },\r\n  // Register your own set of components as custom message types\r\n  customMessages: {\r\n      \"custom\": (props) => <MyCustomMessage {...props} />\r\n  },\r\n  // Defines an object of custom styles if you want to override styles\r\n  customStyles: {\r\n    // Overrides the chatbot message styles\r\n    botMessageBox: {\r\n      backgroundColor: \"#376B7E\",\r\n    },\r\n    // Overrides the chat button styles\r\n    chatButton: {\r\n      backgroundColor: \"#5ccc9d\",\r\n    },\r\n  },\r\n  // Defines an array of widgets that you want to render with a chatbot message\r\n  widgets: [\r\n    {\r\n      // defines the name you will use to reference to this widget in \"createChatBotMessage\".\r\n      widgetName: \"singleFlight\",\r\n      // Function that will be called internally to resolve the widget\r\n      widgetFunc: (props) => <SingleFlight {...props} />,\r\n      // Any props you want the widget to receive on render\r\n      props: {},\r\n      // Any piece of state defined in the state object that you want to pass down to this widget\r\n      mapStateToProps: [\r\n        \"selectedFlightId\",\r\n        \"selectedFlight\",\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport default config;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,QAAQ,mBAAmB;AAExD,OAAOC,YAAY,MAAM,wCAAwC;AAAA;AAEjE,MAAMC,OAAO,GAAG,SAAS;AAEzB,MAAMC,MAAM,GAAG;EACb;EACAD,OAAO,EAAEA,OAAO;EAChB;EACAE,eAAe,EAAE,CACfJ,oBAAoB,CAAE,UAASE,OAAQ,EAAC,CAAC,EACzCF,oBAAoB,CAClB,yEAAyE,EACzE;IACEK,MAAM,EAAE,iBAAiB;IACzBC,KAAK,EAAE;EACT,CAAC,CACF,CACF;EACD;EACAC,KAAK,EAAE;IACLC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,EAAE;IACdC,gBAAgB,EAAE,EAAE;IACpBC,cAAc,EAAE;EAClB,CAAC;EACD;EACAC,gBAAgB,EAAE;IACf;IACDC,MAAM,EAAE,mBAAM;MAAK,KAAK,EAAE;QAAEC,eAAe,EAAE,KAAK;QAAEC,OAAO,EAAE,KAAK;QAAEC,YAAY,EAAE;MAAM,CAAE;MAAA,UAAC;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAM;IACnH;IACAC,SAAS,EAAGC,KAAK,iBAAK,QAAC,eAAe;MAAA,GAAKA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAI;IACpD;IACAC,cAAc,EAAGD,KAAK,iBAAK,QAAC,iBAAiB;MAAA,GAAKA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAI;IAC3D;IACAE,UAAU,EAAGF,KAAK,iBAAK,QAAC,YAAY;MAAA,GAAKA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAI;IAClD;IACAG,eAAe,EAAGH,KAAK,iBAAK,QAAC,iBAAiB;MAAA,GAAKA;IAAK;MAAA;MAAA;MAAA;IAAA;EAC1D,CAAC;EACD;EACAI,cAAc,EAAE;IACZ,QAAQ,EAAGJ,KAAK,iBAAK,QAAC,eAAe;MAAA,GAAKA;IAAK;MAAA;MAAA;MAAA;IAAA;EACnD,CAAC;EACD;EACAK,YAAY,EAAE;IACZ;IACAC,aAAa,EAAE;MACbV,eAAe,EAAE;IACnB,CAAC;IACD;IACAW,UAAU,EAAE;MACVX,eAAe,EAAE;IACnB;EACF,CAAC;EACD;EACAY,OAAO,EAAE,CACP;IACE;IACAC,UAAU,EAAE,cAAc;IAC1B;IACAC,UAAU,EAAGV,KAAK,iBAAK,QAAC,YAAY;MAAA,GAAKA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAI;IAClD;IACAA,KAAK,EAAE,CAAC,CAAC;IACT;IACAW,eAAe,EAAE,CACf,kBAAkB,EAClB,gBAAgB;EAEpB,CAAC;AAEL,CAAC;AAED,eAAe1B,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}