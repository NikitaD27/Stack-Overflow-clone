{"ast":null,"code":"\"use strict\";\n\nconst qs = require('qs');\nconst OPTIONS_KEYS = ['apiKey', 'idempotencyKey', 'stripeAccount', 'apiVersion', 'maxNetworkRetries', 'timeout', 'host'];\nconst utils = {\n  isOptionsHash(o) {\n    return o && typeof o === 'object' && OPTIONS_KEYS.some(prop => Object.prototype.hasOwnProperty.call(o, prop));\n  },\n  /**\n   * Stringifies an Object, accommodating nested objects\n   * (forming the conventional key 'parent[child]=value')\n   */\n  stringifyRequestData: data => {\n    return qs.stringify(data, {\n      serializeDate: d => Math.floor(d.getTime() / 1000)\n    })\n    // Don't use strict form encoding by changing the square bracket control\n    // characters back to their literals. This is fine by the server, and\n    // makes these parameter strings easier to read.\n    .replace(/%5B/g, '[').replace(/%5D/g, ']');\n  },\n  /**\n   * Outputs a new function with interpolated object property values.\n   * Use like so:\n   *   const fn = makeURLInterpolator('some/url/{param1}/{param2}');\n   *   fn({ param1: 123, param2: 456 }); // => 'some/url/123/456'\n   */\n  makeURLInterpolator: (() => {\n    const rc = {\n      '\\n': '\\\\n',\n      '\"': '\\\\\"',\n      '\\u2028': '\\\\u2028',\n      '\\u2029': '\\\\u2029'\n    };\n    return str => {\n      const cleanString = str.replace(/[\"\\n\\r\\u2028\\u2029]/g, $0 => rc[$0]);\n      return outputs => {\n        return cleanString.replace(/\\{([\\s\\S]+?)\\}/g, ($0, $1) =>\n        // @ts-ignore\n        encodeURIComponent(outputs[$1] || ''));\n      };\n    };\n  })(),\n  extractUrlParams: path => {\n    const params = path.match(/\\{\\w+\\}/g);\n    if (!params) {\n      return [];\n    }\n    return params.map(param => param.replace(/[{}]/g, ''));\n  },\n  /**\n   * Return the data argument from a list of arguments\n   *\n   * @param {object[]} args\n   * @returns {object}\n   */\n  getDataFromArgs(args) {\n    if (!Array.isArray(args) || !args[0] || typeof args[0] !== 'object') {\n      return {};\n    }\n    if (!utils.isOptionsHash(args[0])) {\n      return args.shift();\n    }\n    const argKeys = Object.keys(args[0]);\n    const optionKeysInArgs = argKeys.filter(key => OPTIONS_KEYS.includes(key));\n    // In some cases options may be the provided as the first argument.\n    // Here we're detecting a case where there are two distinct arguments\n    // (the first being args and the second options) and with known\n    // option keys in the first so that we can warn the user about it.\n    if (optionKeysInArgs.length > 0 && optionKeysInArgs.length !== argKeys.length) {\n      emitWarning(`Options found in arguments (${optionKeysInArgs.join(', ')}). Did you mean to pass an options object? See https://github.com/stripe/stripe-node/wiki/Passing-Options.`);\n    }\n    return {};\n  },\n  /**\n   * Return the options hash from a list of arguments\n   */\n  getOptionsFromArgs: args => {\n    const opts = {\n      auth: null,\n      host: null,\n      headers: {},\n      settings: {}\n    };\n    if (args.length > 0) {\n      const arg = args[args.length - 1];\n      if (typeof arg === 'string') {\n        opts.auth = args.pop();\n      } else if (utils.isOptionsHash(arg)) {\n        const params = Object.assign({}, args.pop());\n        const extraKeys = Object.keys(params).filter(key => !OPTIONS_KEYS.includes(key));\n        if (extraKeys.length) {\n          emitWarning(`Invalid options found (${extraKeys.join(', ')}); ignoring.`);\n        }\n        if (params.apiKey) {\n          opts.auth = params.apiKey;\n        }\n        if (params.idempotencyKey) {\n          opts.headers['Idempotency-Key'] = params.idempotencyKey;\n        }\n        if (params.stripeAccount) {\n          opts.headers['Stripe-Account'] = params.stripeAccount;\n        }\n        if (params.apiVersion) {\n          opts.headers['Stripe-Version'] = params.apiVersion;\n        }\n        if (Number.isInteger(params.maxNetworkRetries)) {\n          opts.settings.maxNetworkRetries = params.maxNetworkRetries;\n        }\n        if (Number.isInteger(params.timeout)) {\n          opts.settings.timeout = params.timeout;\n        }\n        if (params.host) {\n          opts.host = params.host;\n        }\n      }\n    }\n    return opts;\n  },\n  /**\n   * Provide simple \"Class\" extension mechanism\n   */\n  protoExtend(sub) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const Super = this;\n    const Constructor = Object.prototype.hasOwnProperty.call(sub, 'constructor') ? sub.constructor : function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      Super.apply(this, args);\n    };\n    // This initialization logic is somewhat sensitive to be compatible with\n    // divergent JS implementations like the one found in Qt. See here for more\n    // context:\n    //\n    // https://github.com/stripe/stripe-node/pull/334\n    Object.assign(Constructor, Super);\n    Constructor.prototype = Object.create(Super.prototype);\n    Object.assign(Constructor.prototype, sub);\n    return Constructor;\n  },\n  /**\n   * Remove empty values from an object\n   */\n  removeNullish: obj => {\n    if (typeof obj !== 'object') {\n      throw new Error('Argument must be an object');\n    }\n    return Object.keys(obj).reduce((result, key) => {\n      if (obj[key] != null) {\n        result[key] = obj[key];\n      }\n      return result;\n    }, {});\n  },\n  /**\n   * Normalize standard HTTP Headers:\n   * {'foo-bar': 'hi'}\n   * becomes\n   * {'Foo-Bar': 'hi'}\n   */\n  normalizeHeaders: obj => {\n    if (!(obj && typeof obj === 'object')) {\n      return obj;\n    }\n    return Object.keys(obj).reduce((result, header) => {\n      result[utils.normalizeHeader(header)] = obj[header];\n      return result;\n    }, {});\n  },\n  /**\n   * Stolen from https://github.com/marten-de-vries/header-case-normalizer/blob/master/index.js#L36-L41\n   * without the exceptions which are irrelevant to us.\n   */\n  normalizeHeader: header => {\n    return header.split('-').map(text => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase()).join('-');\n  },\n  callbackifyPromiseWithTimeout: (promise, callback) => {\n    if (callback) {\n      // Ensure callback is called outside of promise stack.\n      return promise.then(res => {\n        setTimeout(() => {\n          callback(null, res);\n        }, 0);\n      }, err => {\n        setTimeout(() => {\n          callback(err, null);\n        }, 0);\n      });\n    }\n    return promise;\n  },\n  /**\n   * Allow for special capitalization cases (such as OAuth)\n   */\n  pascalToCamelCase: name => {\n    if (name === 'OAuth') {\n      return 'oauth';\n    } else {\n      return name[0].toLowerCase() + name.substring(1);\n    }\n  },\n  emitWarning,\n  isObject: obj => {\n    const type = typeof obj;\n    return (type === 'function' || type === 'object') && !!obj;\n  },\n  // For use in multipart requests\n  flattenAndStringify: data => {\n    const result = {};\n    const step = (obj, prevKey) => {\n      Object.keys(obj).forEach(key => {\n        // @ts-ignore\n        const value = obj[key];\n        const newKey = prevKey ? `${prevKey}[${key}]` : key;\n        if (utils.isObject(value)) {\n          if (!(value instanceof Uint8Array) && !Object.prototype.hasOwnProperty.call(value, 'data')) {\n            // Non-buffer non-file Objects are recursively flattened\n            return step(value, newKey);\n          } else {\n            // Buffers and file objects are stored without modification\n            result[newKey] = value;\n          }\n        } else {\n          // Primitives are converted to strings\n          result[newKey] = String(value);\n        }\n      });\n    };\n    step(data, null);\n    return result;\n  },\n  validateInteger: (name, n, defaultVal) => {\n    if (!Number.isInteger(n)) {\n      if (defaultVal !== undefined) {\n        return defaultVal;\n      } else {\n        throw new Error(`${name} must be an integer`);\n      }\n    }\n    return n;\n  },\n  determineProcessUserAgentProperties: () => {\n    return typeof process === 'undefined' ? {} : {\n      lang_version: process.version,\n      platform: process.platform\n    };\n  },\n  /**\n   * Joins an array of Uint8Arrays into a single Uint8Array\n   */\n  concat: arrays => {\n    const totalLength = arrays.reduce((len, array) => len + array.length, 0);\n    const merged = new Uint8Array(totalLength);\n    let offset = 0;\n    arrays.forEach(array => {\n      merged.set(array, offset);\n      offset += array.length;\n    });\n    return merged;\n  }\n};\nfunction emitWarning(warning) {\n  if (typeof process.emitWarning !== 'function') {\n    return console.warn(`Stripe: ${warning}`); /* eslint-disable-line no-console */\n  }\n\n  return process.emitWarning(warning, 'Stripe');\n}\nmodule.exports = utils;","map":{"version":3,"names":["qs","require","OPTIONS_KEYS","utils","isOptionsHash","o","some","prop","Object","prototype","hasOwnProperty","call","stringifyRequestData","data","stringify","serializeDate","d","Math","floor","getTime","replace","makeURLInterpolator","rc","str","cleanString","$0","outputs","$1","encodeURIComponent","extractUrlParams","path","params","match","map","param","getDataFromArgs","args","Array","isArray","shift","argKeys","keys","optionKeysInArgs","filter","key","includes","length","emitWarning","join","getOptionsFromArgs","opts","auth","host","headers","settings","arg","pop","assign","extraKeys","apiKey","idempotencyKey","stripeAccount","apiVersion","Number","isInteger","maxNetworkRetries","timeout","protoExtend","sub","Super","Constructor","constructor","apply","create","removeNullish","obj","Error","reduce","result","normalizeHeaders","header","normalizeHeader","split","text","charAt","toUpperCase","substr","toLowerCase","callbackifyPromiseWithTimeout","promise","callback","then","res","setTimeout","err","pascalToCamelCase","name","substring","isObject","type","flattenAndStringify","step","prevKey","forEach","value","newKey","Uint8Array","String","validateInteger","n","defaultVal","undefined","determineProcessUserAgentProperties","process","lang_version","version","platform","concat","arrays","totalLength","len","array","merged","offset","set","warning","console","warn","module","exports"],"sources":["C:/Users/Nikita/Stack Overflow Clone/Client/client/node_modules/stripe/lib/utils.js"],"sourcesContent":["\"use strict\";\nconst qs = require('qs');\nconst OPTIONS_KEYS = [\n    'apiKey',\n    'idempotencyKey',\n    'stripeAccount',\n    'apiVersion',\n    'maxNetworkRetries',\n    'timeout',\n    'host',\n];\nconst utils = {\n    isOptionsHash(o) {\n        return (o &&\n            typeof o === 'object' &&\n            OPTIONS_KEYS.some((prop) => Object.prototype.hasOwnProperty.call(o, prop)));\n    },\n    /**\n     * Stringifies an Object, accommodating nested objects\n     * (forming the conventional key 'parent[child]=value')\n     */\n    stringifyRequestData: (data) => {\n        return (qs\n            .stringify(data, {\n            serializeDate: (d) => Math.floor(d.getTime() / 1000),\n        })\n            // Don't use strict form encoding by changing the square bracket control\n            // characters back to their literals. This is fine by the server, and\n            // makes these parameter strings easier to read.\n            .replace(/%5B/g, '[')\n            .replace(/%5D/g, ']'));\n    },\n    /**\n     * Outputs a new function with interpolated object property values.\n     * Use like so:\n     *   const fn = makeURLInterpolator('some/url/{param1}/{param2}');\n     *   fn({ param1: 123, param2: 456 }); // => 'some/url/123/456'\n     */\n    makeURLInterpolator: (() => {\n        const rc = {\n            '\\n': '\\\\n',\n            '\"': '\\\\\"',\n            '\\u2028': '\\\\u2028',\n            '\\u2029': '\\\\u2029',\n        };\n        return (str) => {\n            const cleanString = str.replace(/[\"\\n\\r\\u2028\\u2029]/g, ($0) => rc[$0]);\n            return (outputs) => {\n                return cleanString.replace(/\\{([\\s\\S]+?)\\}/g, ($0, $1) => \n                // @ts-ignore\n                encodeURIComponent(outputs[$1] || ''));\n            };\n        };\n    })(),\n    extractUrlParams: (path) => {\n        const params = path.match(/\\{\\w+\\}/g);\n        if (!params) {\n            return [];\n        }\n        return params.map((param) => param.replace(/[{}]/g, ''));\n    },\n    /**\n     * Return the data argument from a list of arguments\n     *\n     * @param {object[]} args\n     * @returns {object}\n     */\n    getDataFromArgs(args) {\n        if (!Array.isArray(args) || !args[0] || typeof args[0] !== 'object') {\n            return {};\n        }\n        if (!utils.isOptionsHash(args[0])) {\n            return args.shift();\n        }\n        const argKeys = Object.keys(args[0]);\n        const optionKeysInArgs = argKeys.filter((key) => OPTIONS_KEYS.includes(key));\n        // In some cases options may be the provided as the first argument.\n        // Here we're detecting a case where there are two distinct arguments\n        // (the first being args and the second options) and with known\n        // option keys in the first so that we can warn the user about it.\n        if (optionKeysInArgs.length > 0 &&\n            optionKeysInArgs.length !== argKeys.length) {\n            emitWarning(`Options found in arguments (${optionKeysInArgs.join(', ')}). Did you mean to pass an options object? See https://github.com/stripe/stripe-node/wiki/Passing-Options.`);\n        }\n        return {};\n    },\n    /**\n     * Return the options hash from a list of arguments\n     */\n    getOptionsFromArgs: (args) => {\n        const opts = {\n            auth: null,\n            host: null,\n            headers: {},\n            settings: {},\n        };\n        if (args.length > 0) {\n            const arg = args[args.length - 1];\n            if (typeof arg === 'string') {\n                opts.auth = args.pop();\n            }\n            else if (utils.isOptionsHash(arg)) {\n                const params = Object.assign({}, args.pop());\n                const extraKeys = Object.keys(params).filter((key) => !OPTIONS_KEYS.includes(key));\n                if (extraKeys.length) {\n                    emitWarning(`Invalid options found (${extraKeys.join(', ')}); ignoring.`);\n                }\n                if (params.apiKey) {\n                    opts.auth = params.apiKey;\n                }\n                if (params.idempotencyKey) {\n                    opts.headers['Idempotency-Key'] = params.idempotencyKey;\n                }\n                if (params.stripeAccount) {\n                    opts.headers['Stripe-Account'] = params.stripeAccount;\n                }\n                if (params.apiVersion) {\n                    opts.headers['Stripe-Version'] = params.apiVersion;\n                }\n                if (Number.isInteger(params.maxNetworkRetries)) {\n                    opts.settings.maxNetworkRetries = params.maxNetworkRetries;\n                }\n                if (Number.isInteger(params.timeout)) {\n                    opts.settings.timeout = params.timeout;\n                }\n                if (params.host) {\n                    opts.host = params.host;\n                }\n            }\n        }\n        return opts;\n    },\n    /**\n     * Provide simple \"Class\" extension mechanism\n     */\n    protoExtend(sub) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const Super = this;\n        const Constructor = Object.prototype.hasOwnProperty.call(sub, 'constructor')\n            ? sub.constructor\n            : function (...args) {\n                Super.apply(this, args);\n            };\n        // This initialization logic is somewhat sensitive to be compatible with\n        // divergent JS implementations like the one found in Qt. See here for more\n        // context:\n        //\n        // https://github.com/stripe/stripe-node/pull/334\n        Object.assign(Constructor, Super);\n        Constructor.prototype = Object.create(Super.prototype);\n        Object.assign(Constructor.prototype, sub);\n        return Constructor;\n    },\n    /**\n     * Remove empty values from an object\n     */\n    removeNullish: (obj) => {\n        if (typeof obj !== 'object') {\n            throw new Error('Argument must be an object');\n        }\n        return Object.keys(obj).reduce((result, key) => {\n            if (obj[key] != null) {\n                result[key] = obj[key];\n            }\n            return result;\n        }, {});\n    },\n    /**\n     * Normalize standard HTTP Headers:\n     * {'foo-bar': 'hi'}\n     * becomes\n     * {'Foo-Bar': 'hi'}\n     */\n    normalizeHeaders: (obj) => {\n        if (!(obj && typeof obj === 'object')) {\n            return obj;\n        }\n        return Object.keys(obj).reduce((result, header) => {\n            result[utils.normalizeHeader(header)] = obj[header];\n            return result;\n        }, {});\n    },\n    /**\n     * Stolen from https://github.com/marten-de-vries/header-case-normalizer/blob/master/index.js#L36-L41\n     * without the exceptions which are irrelevant to us.\n     */\n    normalizeHeader: (header) => {\n        return header\n            .split('-')\n            .map((text) => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase())\n            .join('-');\n    },\n    callbackifyPromiseWithTimeout: (promise, callback) => {\n        if (callback) {\n            // Ensure callback is called outside of promise stack.\n            return promise.then((res) => {\n                setTimeout(() => {\n                    callback(null, res);\n                }, 0);\n            }, (err) => {\n                setTimeout(() => {\n                    callback(err, null);\n                }, 0);\n            });\n        }\n        return promise;\n    },\n    /**\n     * Allow for special capitalization cases (such as OAuth)\n     */\n    pascalToCamelCase: (name) => {\n        if (name === 'OAuth') {\n            return 'oauth';\n        }\n        else {\n            return name[0].toLowerCase() + name.substring(1);\n        }\n    },\n    emitWarning,\n    isObject: (obj) => {\n        const type = typeof obj;\n        return (type === 'function' || type === 'object') && !!obj;\n    },\n    // For use in multipart requests\n    flattenAndStringify: (data) => {\n        const result = {};\n        const step = (obj, prevKey) => {\n            Object.keys(obj).forEach((key) => {\n                // @ts-ignore\n                const value = obj[key];\n                const newKey = prevKey ? `${prevKey}[${key}]` : key;\n                if (utils.isObject(value)) {\n                    if (!(value instanceof Uint8Array) &&\n                        !Object.prototype.hasOwnProperty.call(value, 'data')) {\n                        // Non-buffer non-file Objects are recursively flattened\n                        return step(value, newKey);\n                    }\n                    else {\n                        // Buffers and file objects are stored without modification\n                        result[newKey] = value;\n                    }\n                }\n                else {\n                    // Primitives are converted to strings\n                    result[newKey] = String(value);\n                }\n            });\n        };\n        step(data, null);\n        return result;\n    },\n    validateInteger: (name, n, defaultVal) => {\n        if (!Number.isInteger(n)) {\n            if (defaultVal !== undefined) {\n                return defaultVal;\n            }\n            else {\n                throw new Error(`${name} must be an integer`);\n            }\n        }\n        return n;\n    },\n    determineProcessUserAgentProperties: () => {\n        return typeof process === 'undefined'\n            ? {}\n            : {\n                lang_version: process.version,\n                platform: process.platform,\n            };\n    },\n    /**\n     * Joins an array of Uint8Arrays into a single Uint8Array\n     */\n    concat: (arrays) => {\n        const totalLength = arrays.reduce((len, array) => len + array.length, 0);\n        const merged = new Uint8Array(totalLength);\n        let offset = 0;\n        arrays.forEach((array) => {\n            merged.set(array, offset);\n            offset += array.length;\n        });\n        return merged;\n    },\n};\nfunction emitWarning(warning) {\n    if (typeof process.emitWarning !== 'function') {\n        return console.warn(`Stripe: ${warning}`); /* eslint-disable-line no-console */\n    }\n    return process.emitWarning(warning, 'Stripe');\n}\nmodule.exports = utils;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}