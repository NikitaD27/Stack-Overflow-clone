{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikita\\\\Stack Overflow Clone\\\\Client\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport AllRoutes from './AllRoutes';\nimport { fetchAllQuestions } from './actions/question';\nimport { fetchAllUsers } from './actions/users';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchAllQuestions());\n    dispatch(fetchAllUsers());\n  }, [dispatch]);\n  const steps = [{\n    id: '0',\n    message: 'Hey,How may I help you?',\n    // This calls the next id\n    // i.e. id 1 in this case\n    trigger: '1'\n  }, {\n    id: '1',\n    // This message appears in\n    // the bot chat bubble\n    message: 'Please write your username',\n    trigger: '2'\n  }, {\n    id: '2',\n    // Here we want the user\n    // to enter input\n    user: true,\n    trigger: '3'\n  }, {\n    id: '3',\n    message: \" hi {previousValue}, how can I help you?\",\n    trigger: 4\n  }, {\n    id: '4',\n    options: [\n    // When we need to show a number of\n    // options to choose we create alist\n    // like this\n    {\n      value: 1,\n      label: 'View Courses'\n    }, {\n      value: 2,\n      label: 'Some Tags that might help you'\n    }],\n    end: true\n  }];\n\n  // Creating your own theme\n  const theme = {\n    background: '#C9FF8F',\n    headerBgColor: '#197B22',\n    headerFontSize: '20px',\n    botBubbleColor: '#0F3789',\n    headerFontColor: 'white',\n    botFontColor: 'white',\n    userBubbleColor: '#FF5733',\n    userFontColor: 'white'\n  };\n\n  // Set some properties of the bot\n  const config = {\n    botAvatar: \"img.png\",\n    floating: true\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AllRoutes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(ChatBot\n\n      // This appears as the header\n      // text for the chat bot\n      , {\n        headerTitle: \"ChatBot\",\n        steps: steps,\n        ...config\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","useEffect","useDispatch","Navbar","AllRoutes","fetchAllQuestions","fetchAllUsers","ChatBot","ThemeProvider","App","dispatch","steps","id","message","trigger","user","options","value","label","end","theme","background","headerBgColor","headerFontSize","botBubbleColor","headerFontColor","botFontColor","userBubbleColor","userFontColor","config","botAvatar","floating"],"sources":["C:/Users/Nikita/Stack Overflow Clone/Client/client/src/App.js"],"sourcesContent":["import { BrowserRouter as Router } from 'react-router-dom' \nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar'\nimport AllRoutes from './AllRoutes'\nimport { fetchAllQuestions } from './actions/question'\nimport { fetchAllUsers } from './actions/users'\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\n\nfunction App() {\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchAllQuestions())\n    dispatch(fetchAllUsers())\n  }, [dispatch])\n  const steps = [\n    {\n      id: '0',\n      message: 'Hey,How may I help you?',\n  \n      // This calls the next id\n      // i.e. id 1 in this case\n      trigger: '1',\n    }, {\n      id: '1',\n  \n      // This message appears in\n      // the bot chat bubble\n      message: 'Please write your username',\n      trigger: '2'\n    }, {\n      id: '2',\n  \n      // Here we want the user\n      // to enter input\n      user: true,\n      trigger: '3',\n    }, {\n      id: '3',\n      message: \" hi {previousValue}, how can I help you?\",\n      trigger: 4\n    }, {\n      id: '4',\n      options: [\n        \n        // When we need to show a number of\n        // options to choose we create alist\n        // like this\n        { value: 1, label: 'View Courses' },\n        { value: 2, label: 'Some Tags that might help you' },\n  \n      ],\n      end: true\n    }\n  ];\n  \n  // Creating your own theme\n  const theme = {\n    background: '#C9FF8F',\n    headerBgColor: '#197B22',\n    headerFontSize: '20px',\n    botBubbleColor: '#0F3789',\n    headerFontColor: 'white',\n    botFontColor: 'white',\n    userBubbleColor: '#FF5733',\n    userFontColor: 'white',\n  };\n  \n  // Set some properties of the bot\n  const config = {\n    botAvatar: \"img.png\",\n    floating: true,\n  };\n  return (\n    <div className=\"App\">\n      <Router >\n        <Navbar />\n        <AllRoutes />\n      </Router >\n      <ThemeProvider theme={theme}>\n\t\t\t\t<ChatBot\n\n\t\t\t\t\t// This appears as the header\n\t\t\t\t\t// text for the chat bot\n\t\t\t\t\theaderTitle=\"ChatBot\"\n\t\t\t\t\tsteps={steps}\n\t\t\t\t\t{...config}\n\n\t\t\t\t/>\n\t\t\t</ThemeProvider>\n      </div>\n    );\n  }\n\n\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,aAAa,IAAIC,MAAM,QAAQ,kBAAkB;AAC1D,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,iBAAiB,QAAQ,oBAAoB;AACtD,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,aAAa,QAAQ,mBAAmB;AAAC;AAElD,SAASC,GAAG,GAAG;EAAA;EAEb,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAE9BD,SAAS,CAAC,MAAM;IACdS,QAAQ,CAACL,iBAAiB,EAAE,CAAC;IAC7BK,QAAQ,CAACJ,aAAa,EAAE,CAAC;EAC3B,CAAC,EAAE,CAACI,QAAQ,CAAC,CAAC;EACd,MAAMC,KAAK,GAAG,CACZ;IACEC,EAAE,EAAE,GAAG;IACPC,OAAO,EAAE,yBAAyB;IAElC;IACA;IACAC,OAAO,EAAE;EACX,CAAC,EAAE;IACDF,EAAE,EAAE,GAAG;IAEP;IACA;IACAC,OAAO,EAAE,4BAA4B;IACrCC,OAAO,EAAE;EACX,CAAC,EAAE;IACDF,EAAE,EAAE,GAAG;IAEP;IACA;IACAG,IAAI,EAAE,IAAI;IACVD,OAAO,EAAE;EACX,CAAC,EAAE;IACDF,EAAE,EAAE,GAAG;IACPC,OAAO,EAAE,0CAA0C;IACnDC,OAAO,EAAE;EACX,CAAC,EAAE;IACDF,EAAE,EAAE,GAAG;IACPI,OAAO,EAAE;IAEP;IACA;IACA;IACA;MAAEC,KAAK,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAe,CAAC,EACnC;MAAED,KAAK,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAgC,CAAC,CAErD;IACDC,GAAG,EAAE;EACP,CAAC,CACF;;EAED;EACA,MAAMC,KAAK,GAAG;IACZC,UAAU,EAAE,SAAS;IACrBC,aAAa,EAAE,SAAS;IACxBC,cAAc,EAAE,MAAM;IACtBC,cAAc,EAAE,SAAS;IACzBC,eAAe,EAAE,OAAO;IACxBC,YAAY,EAAE,OAAO;IACrBC,eAAe,EAAE,SAAS;IAC1BC,aAAa,EAAE;EACjB,CAAC;;EAED;EACA,MAAMC,MAAM,GAAG;IACbC,SAAS,EAAE,SAAS;IACpBC,QAAQ,EAAE;EACZ,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB,QAAC,MAAM;MAAA,wBACL,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACV,QAAC,SAAS;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACL,eACV,QAAC,aAAa;MAAC,KAAK,EAAEX,KAAM;MAAA,uBAC9B,QAAC;;MAEA;MACA;MAAA;QACA,WAAW,EAAC,SAAS;QACrB,KAAK,EAAET,KAAM;QAAA,GACTkB;MAAM;QAAA;QAAA;QAAA;MAAA;IAET;MAAA;MAAA;MAAA;IAAA,QACa;EAAA;IAAA;IAAA;IAAA;EAAA,QACP;AAEV;AAAC,GArFMpB,GAAG;EAAA,QAEOP,WAAW;AAAA;AAAA,KAFrBO,GAAG;AAyFZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}