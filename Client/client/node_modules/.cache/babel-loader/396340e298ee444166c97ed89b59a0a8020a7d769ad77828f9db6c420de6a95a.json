{"ast":null,"code":"// File generated from our OpenAPI spec\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\nmodule.exports = StripeResource.extend({\n  create: stripeMethod({\n    method: 'POST',\n    fullPath: '/v1/customers'\n  }),\n  retrieve: stripeMethod({\n    method: 'GET',\n    fullPath: '/v1/customers/{customer}'\n  }),\n  update: stripeMethod({\n    method: 'POST',\n    fullPath: '/v1/customers/{customer}'\n  }),\n  list: stripeMethod({\n    method: 'GET',\n    fullPath: '/v1/customers',\n    methodType: 'list'\n  }),\n  del: stripeMethod({\n    method: 'DELETE',\n    fullPath: '/v1/customers/{customer}'\n  }),\n  createFundingInstructions: stripeMethod({\n    method: 'POST',\n    fullPath: '/v1/customers/{customer}/funding_instructions'\n  }),\n  deleteDiscount: stripeMethod({\n    method: 'DELETE',\n    fullPath: '/v1/customers/{customer}/discount'\n  }),\n  listPaymentMethods: stripeMethod({\n    method: 'GET',\n    fullPath: '/v1/customers/{customer}/payment_methods',\n    methodType: 'list'\n  }),\n  retrievePaymentMethod: stripeMethod({\n    method: 'GET',\n    fullPath: '/v1/customers/{customer}/payment_methods/{payment_method}'\n  }),\n  search: stripeMethod({\n    method: 'GET',\n    fullPath: '/v1/customers/search',\n    methodType: 'search'\n  }),\n  retrieveCashBalance: stripeMethod({\n    method: 'GET',\n    fullPath: '/v1/customers/{customer}/cash_balance'\n  }),\n  updateCashBalance: stripeMethod({\n    method: 'POST',\n    fullPath: '/v1/customers/{customer}/cash_balance'\n  }),\n  createBalanceTransaction: stripeMethod({\n    method: 'POST',\n    fullPath: '/v1/customers/{customer}/balance_transactions'\n  }),\n  retrieveBalanceTransaction: stripeMethod({\n    method: 'GET',\n    fullPath: '/v1/customers/{customer}/balance_transactions/{transaction}'\n  }),\n  updateBalanceTransaction: stripeMethod({\n    method: 'POST',\n    fullPath: '/v1/customers/{customer}/balance_transactions/{transaction}'\n  }),\n  listBalanceTransactions: stripeMethod({\n    method: 'GET',\n    fullPath: '/v1/customers/{customer}/balance_transactions',\n    methodType: 'list'\n  }),\n  retrieveCashBalanceTransaction: stripeMethod({\n    method: 'GET',\n    fullPath: '/v1/customers/{customer}/cash_balance_transactions/{transaction}'\n  }),\n  listCashBalanceTransactions: stripeMethod({\n    method: 'GET',\n    fullPath: '/v1/customers/{customer}/cash_balance_transactions',\n    methodType: 'list'\n  }),\n  createSource: stripeMethod({\n    method: 'POST',\n    fullPath: '/v1/customers/{customer}/sources'\n  }),\n  retrieveSource: stripeMethod({\n    method: 'GET',\n    fullPath: '/v1/customers/{customer}/sources/{id}'\n  }),\n  updateSource: stripeMethod({\n    method: 'POST',\n    fullPath: '/v1/customers/{customer}/sources/{id}'\n  }),\n  listSources: stripeMethod({\n    method: 'GET',\n    fullPath: '/v1/customers/{customer}/sources',\n    methodType: 'list'\n  }),\n  deleteSource: stripeMethod({\n    method: 'DELETE',\n    fullPath: '/v1/customers/{customer}/sources/{id}'\n  }),\n  verifySource: stripeMethod({\n    method: 'POST',\n    fullPath: '/v1/customers/{customer}/sources/{id}/verify'\n  }),\n  createTaxId: stripeMethod({\n    method: 'POST',\n    fullPath: '/v1/customers/{customer}/tax_ids'\n  }),\n  retrieveTaxId: stripeMethod({\n    method: 'GET',\n    fullPath: '/v1/customers/{customer}/tax_ids/{id}'\n  }),\n  listTaxIds: stripeMethod({\n    method: 'GET',\n    fullPath: '/v1/customers/{customer}/tax_ids',\n    methodType: 'list'\n  }),\n  deleteTaxId: stripeMethod({\n    method: 'DELETE',\n    fullPath: '/v1/customers/{customer}/tax_ids/{id}'\n  })\n});","map":{"version":3,"names":["StripeResource","require","stripeMethod","method","module","exports","extend","create","fullPath","retrieve","update","list","methodType","del","createFundingInstructions","deleteDiscount","listPaymentMethods","retrievePaymentMethod","search","retrieveCashBalance","updateCashBalance","createBalanceTransaction","retrieveBalanceTransaction","updateBalanceTransaction","listBalanceTransactions","retrieveCashBalanceTransaction","listCashBalanceTransactions","createSource","retrieveSource","updateSource","listSources","deleteSource","verifySource","createTaxId","retrieveTaxId","listTaxIds","deleteTaxId"],"sources":["C:/Users/Nikita/Stack Overflow Clone/Client/client/node_modules/stripe/lib/resources/Customers.js"],"sourcesContent":["// File generated from our OpenAPI spec\n'use strict';\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\nmodule.exports = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/customers/{customer}',\n    }),\n    createFundingInstructions: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/funding_instructions',\n    }),\n    deleteDiscount: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/customers/{customer}/discount',\n    }),\n    listPaymentMethods: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/payment_methods',\n        methodType: 'list',\n    }),\n    retrievePaymentMethod: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/payment_methods/{payment_method}',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/search',\n        methodType: 'search',\n    }),\n    retrieveCashBalance: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/cash_balance',\n    }),\n    updateCashBalance: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/cash_balance',\n    }),\n    createBalanceTransaction: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/balance_transactions',\n    }),\n    retrieveBalanceTransaction: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/balance_transactions/{transaction}',\n    }),\n    updateBalanceTransaction: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/balance_transactions/{transaction}',\n    }),\n    listBalanceTransactions: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/balance_transactions',\n        methodType: 'list',\n    }),\n    retrieveCashBalanceTransaction: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/cash_balance_transactions/{transaction}',\n    }),\n    listCashBalanceTransactions: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/cash_balance_transactions',\n        methodType: 'list',\n    }),\n    createSource: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/sources',\n    }),\n    retrieveSource: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/sources/{id}',\n    }),\n    updateSource: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/sources/{id}',\n    }),\n    listSources: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/sources',\n        methodType: 'list',\n    }),\n    deleteSource: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/customers/{customer}/sources/{id}',\n    }),\n    verifySource: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/sources/{id}/verify',\n    }),\n    createTaxId: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/tax_ids',\n    }),\n    retrieveTaxId: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/tax_ids/{id}',\n    }),\n    listTaxIds: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/tax_ids',\n        methodType: 'list',\n    }),\n    deleteTaxId: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/customers/{customer}/tax_ids/{id}',\n    }),\n});\n"],"mappings":"AAAA;AACA,YAAY;;AACZ,MAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACnD,MAAMC,YAAY,GAAGF,cAAc,CAACG,MAAM;AAC1CC,MAAM,CAACC,OAAO,GAAGL,cAAc,CAACM,MAAM,CAAC;EACnCC,MAAM,EAAEL,YAAY,CAAC;IACjBC,MAAM,EAAE,MAAM;IACdK,QAAQ,EAAE;EACd,CAAC,CAAC;EACFC,QAAQ,EAAEP,YAAY,CAAC;IACnBC,MAAM,EAAE,KAAK;IACbK,QAAQ,EAAE;EACd,CAAC,CAAC;EACFE,MAAM,EAAER,YAAY,CAAC;IACjBC,MAAM,EAAE,MAAM;IACdK,QAAQ,EAAE;EACd,CAAC,CAAC;EACFG,IAAI,EAAET,YAAY,CAAC;IACfC,MAAM,EAAE,KAAK;IACbK,QAAQ,EAAE,eAAe;IACzBI,UAAU,EAAE;EAChB,CAAC,CAAC;EACFC,GAAG,EAAEX,YAAY,CAAC;IACdC,MAAM,EAAE,QAAQ;IAChBK,QAAQ,EAAE;EACd,CAAC,CAAC;EACFM,yBAAyB,EAAEZ,YAAY,CAAC;IACpCC,MAAM,EAAE,MAAM;IACdK,QAAQ,EAAE;EACd,CAAC,CAAC;EACFO,cAAc,EAAEb,YAAY,CAAC;IACzBC,MAAM,EAAE,QAAQ;IAChBK,QAAQ,EAAE;EACd,CAAC,CAAC;EACFQ,kBAAkB,EAAEd,YAAY,CAAC;IAC7BC,MAAM,EAAE,KAAK;IACbK,QAAQ,EAAE,0CAA0C;IACpDI,UAAU,EAAE;EAChB,CAAC,CAAC;EACFK,qBAAqB,EAAEf,YAAY,CAAC;IAChCC,MAAM,EAAE,KAAK;IACbK,QAAQ,EAAE;EACd,CAAC,CAAC;EACFU,MAAM,EAAEhB,YAAY,CAAC;IACjBC,MAAM,EAAE,KAAK;IACbK,QAAQ,EAAE,sBAAsB;IAChCI,UAAU,EAAE;EAChB,CAAC,CAAC;EACFO,mBAAmB,EAAEjB,YAAY,CAAC;IAC9BC,MAAM,EAAE,KAAK;IACbK,QAAQ,EAAE;EACd,CAAC,CAAC;EACFY,iBAAiB,EAAElB,YAAY,CAAC;IAC5BC,MAAM,EAAE,MAAM;IACdK,QAAQ,EAAE;EACd,CAAC,CAAC;EACFa,wBAAwB,EAAEnB,YAAY,CAAC;IACnCC,MAAM,EAAE,MAAM;IACdK,QAAQ,EAAE;EACd,CAAC,CAAC;EACFc,0BAA0B,EAAEpB,YAAY,CAAC;IACrCC,MAAM,EAAE,KAAK;IACbK,QAAQ,EAAE;EACd,CAAC,CAAC;EACFe,wBAAwB,EAAErB,YAAY,CAAC;IACnCC,MAAM,EAAE,MAAM;IACdK,QAAQ,EAAE;EACd,CAAC,CAAC;EACFgB,uBAAuB,EAAEtB,YAAY,CAAC;IAClCC,MAAM,EAAE,KAAK;IACbK,QAAQ,EAAE,+CAA+C;IACzDI,UAAU,EAAE;EAChB,CAAC,CAAC;EACFa,8BAA8B,EAAEvB,YAAY,CAAC;IACzCC,MAAM,EAAE,KAAK;IACbK,QAAQ,EAAE;EACd,CAAC,CAAC;EACFkB,2BAA2B,EAAExB,YAAY,CAAC;IACtCC,MAAM,EAAE,KAAK;IACbK,QAAQ,EAAE,oDAAoD;IAC9DI,UAAU,EAAE;EAChB,CAAC,CAAC;EACFe,YAAY,EAAEzB,YAAY,CAAC;IACvBC,MAAM,EAAE,MAAM;IACdK,QAAQ,EAAE;EACd,CAAC,CAAC;EACFoB,cAAc,EAAE1B,YAAY,CAAC;IACzBC,MAAM,EAAE,KAAK;IACbK,QAAQ,EAAE;EACd,CAAC,CAAC;EACFqB,YAAY,EAAE3B,YAAY,CAAC;IACvBC,MAAM,EAAE,MAAM;IACdK,QAAQ,EAAE;EACd,CAAC,CAAC;EACFsB,WAAW,EAAE5B,YAAY,CAAC;IACtBC,MAAM,EAAE,KAAK;IACbK,QAAQ,EAAE,kCAAkC;IAC5CI,UAAU,EAAE;EAChB,CAAC,CAAC;EACFmB,YAAY,EAAE7B,YAAY,CAAC;IACvBC,MAAM,EAAE,QAAQ;IAChBK,QAAQ,EAAE;EACd,CAAC,CAAC;EACFwB,YAAY,EAAE9B,YAAY,CAAC;IACvBC,MAAM,EAAE,MAAM;IACdK,QAAQ,EAAE;EACd,CAAC,CAAC;EACFyB,WAAW,EAAE/B,YAAY,CAAC;IACtBC,MAAM,EAAE,MAAM;IACdK,QAAQ,EAAE;EACd,CAAC,CAAC;EACF0B,aAAa,EAAEhC,YAAY,CAAC;IACxBC,MAAM,EAAE,KAAK;IACbK,QAAQ,EAAE;EACd,CAAC,CAAC;EACF2B,UAAU,EAAEjC,YAAY,CAAC;IACrBC,MAAM,EAAE,KAAK;IACbK,QAAQ,EAAE,kCAAkC;IAC5CI,UAAU,EAAE;EAChB,CAAC,CAAC;EACFwB,WAAW,EAAElC,YAAY,CAAC;IACtBC,MAAM,EAAE,QAAQ;IAChBK,QAAQ,EAAE;EACd,CAAC;AACL,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}