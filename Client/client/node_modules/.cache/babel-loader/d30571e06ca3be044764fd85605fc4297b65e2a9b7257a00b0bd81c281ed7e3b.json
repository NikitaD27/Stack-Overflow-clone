{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikita\\\\Stack Overflow Clone\\\\Client\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport Reducers from './reducers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst store = createStore(Reducers, compose(applyMiddleware(thunk)));\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 3\n}, this));\nconst express = require('express');\nconst bodyparser = require('body-parser');\nconst path = require('path');\nconst app = express();\nvar Publishable_Key = 'pk_test_51MY9u6SGcu8faDtSCnmvO248haaBKFbVZI4Tuc6lxgQOLLpX0hSdI4JQ1HvWvQcRVu4fF0CR2ij4VbPNyi8HLive00U2GvuLMO';\nvar Secret_Key = 'sk_test_51MY9u6SGcu8faDtSXXFC8SFiYi8ZPt6HGOko2RYO1zK9leLohi1wuXVaME4gjpwpQ822meuUJXRkCTW8D7AlkRcI00ZIqoZDEq';\nconst stripe = require('stripe')(Secret_Key);\nconst port = process.env.PORT || 3000;\napp.use(bodyparser.urlencoded({\n  extended: false\n}));\napp.use(bodyparser.json());\n\n// View Engine Setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'ejs');\napp.get('/', function (req, res) {\n  res.render('Home', {\n    key: Publishable_Key\n  });\n});\napp.post('/payment', function (req, res) {\n  // Moreover you can take more details from user\n  // like Address, Name, etc from form\n  stripe.customers.create({\n    email: req.body.stripeEmail,\n    source: req.body.stripeToken,\n    name: 'Gourav Hammad',\n    address: {\n      line1: 'TC 9/4 Old MES colony',\n      postal_code: '452331',\n      city: 'Indore',\n      state: 'Madhya Pradesh',\n      country: 'India'\n    }\n  }).then(customer => {\n    return stripe.charges.create({\n      amount: 10000,\n      // Charging Rs 25\n      description: 'Web Development Product',\n      currency: 'INR',\n      customer: customer.id\n    });\n  }).then(charge => {\n    res.send(\"Success\"); // If no error occurs\n  }).catch(err => {\n    res.send(err); // If some error occurs\n  });\n});\n\napp.listen(port, function (error) {\n  if (error) throw error;\n  console.log(\"Server created Successfully\");\n});","map":{"version":3,"names":["React","ReactDOM","App","Provider","createStore","applyMiddleware","compose","thunk","Reducers","store","root","createRoot","document","getElementById","render","express","require","bodyparser","path","app","Publishable_Key","Secret_Key","stripe","port","process","env","PORT","use","urlencoded","extended","json","set","join","__dirname","get","req","res","key","post","customers","create","email","body","stripeEmail","source","stripeToken","name","address","line1","postal_code","city","state","country","then","customer","charges","amount","description","currency","id","charge","send","catch","err","listen","error","console","log"],"sources":["C:/Users/Nikita/Stack Overflow Clone/Client/client/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport Reducers from './reducers'\n\nconst store = createStore( Reducers, compose(applyMiddleware(thunk)))\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\nconst express = require('express')\nconst bodyparser = require('body-parser')\nconst path = require('path')\nconst app = express()\n\nvar Publishable_Key = 'pk_test_51MY9u6SGcu8faDtSCnmvO248haaBKFbVZI4Tuc6lxgQOLLpX0hSdI4JQ1HvWvQcRVu4fF0CR2ij4VbPNyi8HLive00U2GvuLMO'\nvar Secret_Key = 'sk_test_51MY9u6SGcu8faDtSXXFC8SFiYi8ZPt6HGOko2RYO1zK9leLohi1wuXVaME4gjpwpQ822meuUJXRkCTW8D7AlkRcI00ZIqoZDEq'\n\nconst stripe = require('stripe')(Secret_Key)\n\nconst port = process.env.PORT || 3000\n\napp.use(bodyparser.urlencoded({extended:false}))\napp.use(bodyparser.json())\n\n// View Engine Setup\napp.set('views', path.join(__dirname, 'views'))\napp.set('view engine', 'ejs')\n\napp.get('/', function(req, res){\n\tres.render('Home', {\n\tkey: Publishable_Key\n\t})\n})\n\napp.post('/payment', function(req, res){\n\n\t// Moreover you can take more details from user\n\t// like Address, Name, etc from form\n\tstripe.customers.create({\n\t\temail: req.body.stripeEmail,\n\t\tsource: req.body.stripeToken,\n\t\tname: 'Gourav Hammad',\n\t\taddress: {\n\t\t\tline1: 'TC 9/4 Old MES colony',\n\t\t\tpostal_code: '452331',\n\t\t\tcity: 'Indore',\n\t\t\tstate: 'Madhya Pradesh',\n\t\t\tcountry: 'India',\n\t\t}\n\t})\n\t.then((customer) => {\n\n\t\treturn stripe.charges.create({\n\t\t\tamount: 10000,\t // Charging Rs 25\n\t\t\tdescription: 'Web Development Product',\n\t\t\tcurrency: 'INR',\n\t\t\tcustomer: customer.id\n\t\t});\n\t})\n\t.then((charge) => {\n\t\tres.send(\"Success\") // If no error occurs\n\t})\n\t.catch((err) => {\n\t\tres.send(err)\t // If some error occurs\n\t});\n})\n\napp.listen(port, function(error){\n\tif(error) throw error\n\tconsole.log(\"Server created Successfully\")\n})\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,SAAQC,QAAQ,QAAO,aAAa;AACpC,SAASC,WAAW,EAAEC,eAAe,EAAEC,OAAO,QAAQ,OAAO;AAC7D,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,QAAQ,MAAM,YAAY;AAAA;AAEjC,MAAMC,KAAK,GAAGL,WAAW,CAAEI,QAAQ,EAAEF,OAAO,CAACD,eAAe,CAACE,KAAK,CAAC,CAAC,CAAC;AAErE,MAAMG,IAAI,GAAGT,QAAQ,CAACU,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAEjEH,IAAI,CAACI,MAAM,eACT,QAAC,KAAK,CAAC,UAAU;EAAA,uBACf,QAAC,QAAQ;IAAC,KAAK,EAAEL,KAAM;IAAA,uBACrB,QAAC,GAAG;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA;AACE;EAAA;EAAA;EAAA;AAAA,QACM,CACpB;AAED,MAAMM,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAa,CAAC;AACzC,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMG,GAAG,GAAGJ,OAAO,EAAE;AAErB,IAAIK,eAAe,GAAG,6GAA6G;AACnI,IAAIC,UAAU,GAAG,6GAA6G;AAE9H,MAAMC,MAAM,GAAGN,OAAO,CAAC,QAAQ,CAAC,CAACK,UAAU,CAAC;AAE5C,MAAME,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI;AAErCP,GAAG,CAACQ,GAAG,CAACV,UAAU,CAACW,UAAU,CAAC;EAACC,QAAQ,EAAC;AAAK,CAAC,CAAC,CAAC;AAChDV,GAAG,CAACQ,GAAG,CAACV,UAAU,CAACa,IAAI,EAAE,CAAC;;AAE1B;AACAX,GAAG,CAACY,GAAG,CAAC,OAAO,EAAEb,IAAI,CAACc,IAAI,CAACC,SAAS,EAAE,OAAO,CAAC,CAAC;AAC/Cd,GAAG,CAACY,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC;AAE7BZ,GAAG,CAACe,GAAG,CAAC,GAAG,EAAE,UAASC,GAAG,EAAEC,GAAG,EAAC;EAC9BA,GAAG,CAACtB,MAAM,CAAC,MAAM,EAAE;IACnBuB,GAAG,EAAEjB;EACL,CAAC,CAAC;AACH,CAAC,CAAC;AAEFD,GAAG,CAACmB,IAAI,CAAC,UAAU,EAAE,UAASH,GAAG,EAAEC,GAAG,EAAC;EAEtC;EACA;EACAd,MAAM,CAACiB,SAAS,CAACC,MAAM,CAAC;IACvBC,KAAK,EAAEN,GAAG,CAACO,IAAI,CAACC,WAAW;IAC3BC,MAAM,EAAET,GAAG,CAACO,IAAI,CAACG,WAAW;IAC5BC,IAAI,EAAE,eAAe;IACrBC,OAAO,EAAE;MACRC,KAAK,EAAE,uBAAuB;MAC9BC,WAAW,EAAE,QAAQ;MACrBC,IAAI,EAAE,QAAQ;MACdC,KAAK,EAAE,gBAAgB;MACvBC,OAAO,EAAE;IACV;EACD,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAK;IAEnB,OAAOhC,MAAM,CAACiC,OAAO,CAACf,MAAM,CAAC;MAC5BgB,MAAM,EAAE,KAAK;MAAG;MAChBC,WAAW,EAAE,yBAAyB;MACtCC,QAAQ,EAAE,KAAK;MACfJ,QAAQ,EAAEA,QAAQ,CAACK;IACpB,CAAC,CAAC;EACH,CAAC,CAAC,CACDN,IAAI,CAAEO,MAAM,IAAK;IACjBxB,GAAG,CAACyB,IAAI,CAAC,SAAS,CAAC,EAAC;EACrB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;IACf3B,GAAG,CAACyB,IAAI,CAACE,GAAG,CAAC,EAAE;EAChB,CAAC,CAAC;AACH,CAAC,CAAC;;AAEF5C,GAAG,CAAC6C,MAAM,CAACzC,IAAI,EAAE,UAAS0C,KAAK,EAAC;EAC/B,IAAGA,KAAK,EAAE,MAAMA,KAAK;EACrBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;AAC3C,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}